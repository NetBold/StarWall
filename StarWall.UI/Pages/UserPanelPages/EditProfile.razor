@page "/UserPanel/EditProfile"
@inject AccountAPIService AccountAPIService
<PageTitle>StarWall - Userpanel</PageTitle>

<EditForm Model="@updateUserDTO" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator/>
    <div class="container px-4 mt-2">
        <div class="row py-4 d-flex justify-content-center bg-dark shadow" style="border-radius: 20px;">
            <h3 style="color: rgb(77, 206, 211); text-align: center;"><b><i
                        class="fa fa-user-edit" aria-hidden="true"></i> Edit Your Profile</b></h3>
            <div class="col-md-7">
                <div class="row d-flex justify-content-center">
                    <div class="col-lg-3 col-md-4 col-6">
                        <img @ref="previewImageElem" src="@updateUserDTO.ProfileImage" class="img-fluid" /><br />
                    </div>
                </div>
                <label class="text-white-50">Profile Image</label>
                <InputFile @ref="inputFile" type="file" class="form-control mb-3" OnChange="@ProfileImageSelected" accept="image/png, image/jpg, image/jpeg"/>
                <div class="mb-3">
                     <label class="text-white-50">First Name</label>
                     <InputText @bind-Value="@updateUserDTO.FirstName" class="form-control bg-dark text-white" placeholder="First Name" style="text-align: center;" />
                     <ValidationMessage For="@(() => updateUserDTO.FirstName)" class="text-danger mb-3" ></ValidationMessage>
                </div>
                <div class="mb-3">
                    <label class="text-white-50">Last Name</label>
                     <InputText @bind-Value="@updateUserDTO.LastName" class="form-control bg-dark text-white" placeholder="Last Name" style="text-align: center;" />
                     <ValidationMessage For="@(() => updateUserDTO.LastName)" class="text-danger mb-3" ></ValidationMessage>
                </div>               
                <div class="mb-3">
                    <label class="text-white-50">Username</label>
                     <InputText @bind-Value="@updateUserDTO.Username" type="text" class="form-control bg-dark text-white" placeholder="Username" style="text-align: center;" />
                     <ValidationMessage For="@(() => updateUserDTO.Username)" class="text-danger mb-3" ></ValidationMessage>
                </div>   
                <div class="row">
                    <div class="col-md-6 p-1">
                           <a href="/UserPanel" class="btn btn-secondary form-control"><i class="fa fa-arrow-left" aria-hidden="true"></i> back</a>
                     </div>
                     <div class="col-md-6 p-1">
                           <button type="submit" class="btn btn-success form-control"><i class="fa fa-save" aria-hidden="true"></i> Save Changes</button>
                     </div>            
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private UpdateUserDTO updateUserDTO = new();
    IBrowserFile file;
    private InputFile? inputFile;
    private ElementReference previewImageElem;
    HttpClient client;

    private async Task HandleValidSubmit()
    {
        await AccountAPIService.EditProfile(updateUserDTO, file);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var token = await AuthStateHandler.CheckAuthorizationNormalUser();
            updateUserDTO = await AccountAPIService.GetUserForEditProfile();
            StateHasChanged();
        }
    }

    private async Task ProfileImageSelected(InputFileChangeEventArgs e)
    {
        FileInfo fileInfo = new FileInfo(e.File.Name);
        bool isValidType = MimeHelper.IsImageFileTypeValid(fileInfo);
        if (isValidType)
        {
            file = e.File;
            await JsRuntime.InvokeVoidAsync("previewImage", inputFile!.Element, previewImageElem);
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("ShowToastr", ToastType.error.ToString(), "Invalid file type");
        }
    }
}
