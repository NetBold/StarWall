@page "/ResetPassword/{EmailAddress}"
<PageTitle>StarWall - ResetPassword</PageTitle>
<EditForm Model="resetPasswordDTO" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <div class="container mt-2 mb-3">
        <div class="row p-2 bg-dark rounded d-flex justify-content-center  py-5">
            @if (isSuccess)
            {
                <div class="text-center mt-2">
                    <div class="alert alert-success">
                        <b>Your password was changed successfully!</b>
                        <a href="/login">Click Here to Login Your Account</a>
                    </div>
                </div>
            }
            <h4 class="mb-3" style="color: rgb(77, 206, 211); text-align: center;"><b>Reset Password</b></h4>

            <div class="col-md-7 p-2">
                <label class="text-white">Enter the token was sent to your email address (@EmailAddress)</label>
                <InputText type="text" placeholder="Token" class="form-control" @bind-Value="@resetPasswordDTO.Token" />
                <ValidationMessage For="@(() => resetPasswordDTO.Token)" class="text-danger" />
            </div>
            <div class="col-md-7 p-2">
                <InputText type="password" placeholder="New Password" class="form-control"
                    @bind-Value="@resetPasswordDTO.NewPassword" />
                <ValidationMessage For="@(() => resetPasswordDTO.NewPassword)" class="text-danger" />
            </div>
            <div class="col-md-7 p-2">
                <InputText type="password" placeholder="Confirm New Password" class="form-control"
                    @bind-Value="@resetPasswordDTO.ReNewPassword" />
                <ValidationMessage For="@(() => resetPasswordDTO.ReNewPassword)" class="text-danger" />
            </div>
            <div class="col-md-7 p-2">
                <button class="btn btn-success form-control" type="submit"><i class="fa fa-save"></i> Reset
                    Password</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public string EmailAddress { get; set; }

    private bool isSuccess = false;

    private ResetPasswordDTO resetPasswordDTO = new();

    private async Task HandleValidSubmit()
    {
        var client = ClientFactory.CreateClient("StarWallApi");
        HttpResponseMessage response = await client.PostAsJsonAsync("api/Account/ResetPasswordFromForgotPassword", resetPasswordDTO);
        var result = await response.Content.ReadAsStringAsync();
        if (response.IsSuccessStatusCode)
        {
            isSuccess = true;
            await localStorage.RemoveItemAsync("authToken");
            await JsRuntime.InvokeVoidAsync("ShowToastr", ToastType.success.ToString(), result);
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("ShowToastr", ToastType.error.ToString(), result);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        resetPasswordDTO.Email = EmailAddress;
    }
}
